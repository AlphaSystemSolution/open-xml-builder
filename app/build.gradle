import com.alphasystem.openxml.gradleplugin.CodeGenerator

plugins {
    id 'java'
    id 'maven-publish'
}

def generatedSrcDir = new File(buildDir, "generated/src/main/java")

sourceSets {
    main {
        java {
            srcDirs += generatedSrcDir
        }
    }
}

task generateCode {
    CodeGenerator.wmlGenerator(generatedSrcDir)
}

tasks.compileJava {
    dependsOn(generateCode)
}

dependencies {
    implementation "org.docx4j:docx4j-core:${docx4j_version}"
    implementation "org.docx4j:docx4j-export-fo:${docx4j_version}"
    implementation "org.docx4j:docx4j-JAXB-MOXy:${docx4j_version}"
    implementation 'org.docx4j:docx4j-MOXy-JAXBContext:6.0.0'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy:4.0.0'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    testImplementation 'org.testng:testng:7.7.1'
    testImplementation 'com.google.inject:guice:5.1.0'
    testImplementation 'org.uncommons:reportng:1.1.4'
}

group = 'com.alphasystem.openxml'
version = '11.4.9.1'
sourceCompatibility = '11'

java {
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'docs.dir', "${buildDir}/test-files"
}

test {
    useTestNG() {
        suites "testng/testng.xml"
    }
}
